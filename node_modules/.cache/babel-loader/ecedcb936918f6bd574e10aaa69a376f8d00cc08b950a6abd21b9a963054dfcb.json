{"ast":null,"code":"var _jsxFileName = \"/Users/xozi/Desktop/triviaProj/trivia/src/Question.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  console.log(props.answers);\n  const styles = {\n    backgroundColor: props.checked ? \"#222222\" : \"transparent\"\n  };\n\n  // function handleClick(event) {\n  //     const answer = event.target.innerHTML\n  //     const newAnsArr = []\n  //     props.setAns(prevAns => {\n  //             prevAns.map(ans => {\n  //                 if (ans === props.answers){\n  //                     const innerArr=[]\n  //                     ans.map((el) => {\n  //                        return el.ans === answer ? innerArr.push({id: el.id, ans: el.ans, held: !el.held})\n  //                         : innerArr.push(el)\n  //                     })\n  //                     newAnsArr.push(innerArr)\n  //             } else {\n  //                     newAnsArr.push(ans)\n  //                 }\n  //                 console.log(newAnsArr)\n  //                 const final = newAnsArr.slice(0,5)\n  //                 console.log(final.length)\n  //                 console.log(final)\n  //                 return final\n  //             })\n\n  //         })\n  //     }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionBox\",\n      children: props.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ansBox\",\n        id: props.answers[0].id,\n        name: props.name,\n        style: styles,\n        onClick: props.toggle,\n        children: props.answers[0].ans\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ansBox\",\n        id: props.answers[1].id,\n        name: props.name,\n        style: styles,\n        onClick: props.toggle,\n        children: props.answers[1].ans\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ansBox\",\n        id: props.answers[2].id,\n        name: props.name,\n        style: styles,\n        onClick: props.toggle,\n        children: props.answers[2].ans\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ansBox\",\n        id: props.answers[3].id,\n        name: props.name,\n        style: styles,\n        onClick: props.toggle,\n        children: props.answers[3].ans\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_c = Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Question","props","console","log","answers","styles","backgroundColor","checked","children","className","question","fileName","_jsxFileName","lineNumber","columnNumber","id","name","style","onClick","toggle","ans","_c","$RefreshReg$"],"sources":["/Users/xozi/Desktop/triviaProj/trivia/src/Question.js"],"sourcesContent":["import React from \"react\"\n\nexport default function Question (props) {\n\nconsole.log(props.answers)\n    \n    const styles = {\n       backgroundColor: props.checked ? \"#222222\" : \"transparent\"\n    }\n\n    // function handleClick(event) {\n    //     const answer = event.target.innerHTML\n    //     const newAnsArr = []\n    //     props.setAns(prevAns => {\n    //             prevAns.map(ans => {\n    //                 if (ans === props.answers){\n    //                     const innerArr=[]\n    //                     ans.map((el) => {\n    //                        return el.ans === answer ? innerArr.push({id: el.id, ans: el.ans, held: !el.held})\n    //                         : innerArr.push(el)\n    //                     })\n    //                     newAnsArr.push(innerArr)\n    //             } else {\n    //                     newAnsArr.push(ans)\n    //                 }\n    //                 console.log(newAnsArr)\n    //                 const final = newAnsArr.slice(0,5)\n    //                 console.log(final.length)\n    //                 console.log(final)\n    //                 return final\n    //             })\n                \n    //         })\n    //     }\n           \n    \n        \n        \n        \n    \n\n\n    return (\n        <div>\n            <div className=\"questionBox\"  >{props.question}</div>\n            <div className=\"answers\" >\n                <div className=\"ansBox\" id={props.answers[0].id} name={props.name} style={styles}  onClick={props.toggle} >{props.answers[0].ans}</div>\n                <div className=\"ansBox\" id={props.answers[1].id} name={props.name} style={styles}  onClick={props.toggle}>{props.answers[1].ans}</div>\n                <div className=\"ansBox\" id={props.answers[2].id} name={props.name} style={styles}  onClick={props.toggle}>{props.answers[2].ans}</div>\n                <div className=\"ansBox\" id={props.answers[3].id} name={props.name} style={styles}  onClick={props.toggle}>{props.answers[3].ans}</div>\n            </div>\n            <hr></hr>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}