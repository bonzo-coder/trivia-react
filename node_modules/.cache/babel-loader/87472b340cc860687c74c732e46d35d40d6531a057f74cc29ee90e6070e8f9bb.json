{"ast":null,"code":"var _jsxFileName = \"/Users/xozi/Desktop/triviaProj/trivia/src/Question.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  let id = props.id;\n  console.log(props);\n  const styles = {\n    backgroundColor: props.checked ? \"#222222\" : \"transparent\"\n  };\n\n  // function handleClick(event) {\n  //     const answer = event.target.innerHTML\n  //     const newAnsArr = []\n  //     props.setAns(prevAns => {\n  //             prevAns.map(ans => {\n  //                 if (ans === props.answers){\n  //                     const innerArr=[]\n  //                     ans.map((el) => {\n  //                        return el.ans === answer ? innerArr.push({id: el.id, ans: el.ans, held: !el.held})\n  //                         : innerArr.push(el)\n  //                     })\n  //                     newAnsArr.push(innerArr)\n  //             } else {\n  //                     newAnsArr.push(ans)\n  //                 }\n  //                 console.log(newAnsArr)\n  //                 const final = newAnsArr.slice(0,5)\n  //                 console.log(final.length)\n  //                 console.log(final)\n  //                 return final\n  //             })\n\n  //         })\n  //     }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: props.toggle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questionBox\",\n        children: props.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answers\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ansBox\",\n          id: props.answers[0].id,\n          style: styles,\n          children: props.answers[0].ans\n        }, props.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ansBox\",\n          id: props.answers[1].id,\n          style: styles,\n          children: props.answers[1].ans\n        }, props.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ansBox\",\n          id: props.answers[2].id,\n          style: styles,\n          children: props.answers[2].ans\n        }, props.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ansBox\",\n          id: props.answers[3].id,\n          style: styles,\n          children: props.answers[3].ans\n        }, props.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_c = Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Question","props","id","console","log","styles","backgroundColor","checked","children","onClick","toggle","className","question","fileName","_jsxFileName","lineNumber","columnNumber","answers","style","ans","key","_c","$RefreshReg$"],"sources":["/Users/xozi/Desktop/triviaProj/trivia/src/Question.js"],"sourcesContent":["import React from \"react\"\n\nexport default function Question (props) {\n    let id = props.id;\n    console.log(props)\n    \n    const styles = {\n       backgroundColor: props.checked ? \"#222222\" : \"transparent\"\n    }\n\n    // function handleClick(event) {\n    //     const answer = event.target.innerHTML\n    //     const newAnsArr = []\n    //     props.setAns(prevAns => {\n    //             prevAns.map(ans => {\n    //                 if (ans === props.answers){\n    //                     const innerArr=[]\n    //                     ans.map((el) => {\n    //                        return el.ans === answer ? innerArr.push({id: el.id, ans: el.ans, held: !el.held})\n    //                         : innerArr.push(el)\n    //                     })\n    //                     newAnsArr.push(innerArr)\n    //             } else {\n    //                     newAnsArr.push(ans)\n    //                 }\n    //                 console.log(newAnsArr)\n    //                 const final = newAnsArr.slice(0,5)\n    //                 console.log(final.length)\n    //                 console.log(final)\n    //                 return final\n    //             })\n                \n    //         })\n    //     }\n           \n    \n        \n        \n        \n    \n\n\n    return (\n        <div>\n            <div onClick={props.toggle}>\n                <div className=\"questionBox\" >{props.question}</div>\n                <div className=\"answers\">\n                    <div className=\"ansBox\" id={props.answers[0].id} style={styles} key={props.key}  >{props.answers[0].ans}</div>\n                    <div className=\"ansBox\" id={props.answers[1].id} style={styles} key={props.key} >{props.answers[1].ans}</div>\n                    <div className=\"ansBox\" id={props.answers[2].id} style={styles} key={props.key}>{props.answers[2].ans}</div>\n                    <div className=\"ansBox\" id={props.answers[3].id} style={styles} key={props.key} >{props.answers[3].ans}</div>\n                </div>\n                <hr></hr>\n            </div>\n        </div>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,QAAQA,CAAEC,KAAK,EAAE;EACrC,IAAIC,EAAE,GAAGD,KAAK,CAACC,EAAE;EACjBC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EAElB,MAAMI,MAAM,GAAG;IACZC,eAAe,EAAEL,KAAK,CAACM,OAAO,GAAG,SAAS,GAAG;EAChD,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EASA,oBACIR,OAAA;IAAAS,QAAA,eACIT,OAAA;MAAKU,OAAO,EAAER,KAAK,CAACS,MAAO;MAAAF,QAAA,gBACvBT,OAAA;QAAKY,SAAS,EAAC,aAAa;QAAAH,QAAA,EAAGP,KAAK,CAACW;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACpDjB,OAAA;QAAKY,SAAS,EAAC,SAAS;QAAAH,QAAA,gBACpBT,OAAA;UAAKY,SAAS,EAAC,QAAQ;UAACT,EAAE,EAAED,KAAK,CAACgB,OAAO,CAAC,CAAC,CAAC,CAACf,EAAG;UAACgB,KAAK,EAAEb,MAAO;UAAAG,QAAA,EAAoBP,KAAK,CAACgB,OAAO,CAAC,CAAC,CAAC,CAACE;QAAG,GAAlClB,KAAK,CAACmB,GAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA+B,CAAC,eAC9GjB,OAAA;UAAKY,SAAS,EAAC,QAAQ;UAACT,EAAE,EAAED,KAAK,CAACgB,OAAO,CAAC,CAAC,CAAC,CAACf,EAAG;UAACgB,KAAK,EAAEb,MAAO;UAAAG,QAAA,EAAmBP,KAAK,CAACgB,OAAO,CAAC,CAAC,CAAC,CAACE;QAAG,GAAjClB,KAAK,CAACmB,GAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA8B,CAAC,eAC7GjB,OAAA;UAAKY,SAAS,EAAC,QAAQ;UAACT,EAAE,EAAED,KAAK,CAACgB,OAAO,CAAC,CAAC,CAAC,CAACf,EAAG;UAACgB,KAAK,EAAEb,MAAO;UAAAG,QAAA,EAAkBP,KAAK,CAACgB,OAAO,CAAC,CAAC,CAAC,CAACE;QAAG,GAAhClB,KAAK,CAACmB,GAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA6B,CAAC,eAC5GjB,OAAA;UAAKY,SAAS,EAAC,QAAQ;UAACT,EAAE,EAAED,KAAK,CAACgB,OAAO,CAAC,CAAC,CAAC,CAACf,EAAG;UAACgB,KAAK,EAAEb,MAAO;UAAAG,QAAA,EAAmBP,KAAK,CAACgB,OAAO,CAAC,CAAC,CAAC,CAACE;QAAG,GAAjClB,KAAK,CAACmB,GAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA8B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5G,CAAC,eACNjB,OAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACK,EAAA,GAtDuBrB,QAAQ;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}