{"ast":null,"code":"var _jsxFileName = \"/Users/xozi/Desktop/triviaProj/trivia/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport React from 'react';\nimport './App.css';\nimport Question from \"./Question\";\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [start, setStart] = React.useState(true);\n  const [questions, setQuestions] = React.useState([]);\n  const [answers, setAnswers] = React.useState([]);\n  const [userAns, setUserAns] = React.useState([]);\n  const [ansShownScrren, setAnsShownScreen] = React.useState([]);\n  const [gameWon, setGameWon] = React.useState(false);\n  // changes start screen into game\n  function changeStart() {\n    setStart(!start);\n  }\n\n  // data download from api\n  React.useEffect(() => {\n    fetch(\"https://opentdb.com/api.php?amount=5&difficulty=easy&type=multiple\").then(res => res.json()).then(data => {\n      const questionsArray = [];\n      const answersArray = [];\n      for (let i = 0; i < 5; i++) {\n        questionsArray.push({\n          question: data.results[i].question,\n          id: i\n        });\n        answersArray.push({\n          correct: data.results[i].correct_answer,\n          incorrect: data.results[i].incorrect_answers\n        });\n      }\n      saveAnsShown(answersArray, questionsArray);\n    });\n  }, []);\n  function saveAnsShown(ans, que) {\n    setQuestions(que);\n    setAnswers(ans);\n    setAnsShownScreen(() => [mixAnswers(ans[0]), mixAnswers(ans[1]), mixAnswers(ans[2]), mixAnswers(ans[3]), mixAnswers(ans[4])]);\n  }\n\n  // React.useEffect (() => {\n\n  // },[gameWon])\n\n  function mixAnswers(obj) {\n    let finalAnsArr = [];\n    let newAnswers = [obj.correct, obj.incorrect[0], obj.incorrect[1], obj.incorrect[2]];\n    //choose 1 ans randomly\n    const choose1 = Math.floor(Math.random() * 3);\n    finalAnsArr.push({\n      id: nanoid(),\n      ans: newAnswers[choose1],\n      held: false\n    });\n    newAnswers.splice(choose1, 1);\n    //choose 2 ans randomly\n    const choose2 = Math.floor(Math.random() * 2);\n    finalAnsArr.push({\n      id: nanoid(),\n      ans: newAnswers[choose2],\n      held: false\n    });\n    newAnswers.splice(choose2, 1);\n    //choose 3 ans randomly\n    const choose3 = Math.floor(Math.random());\n    finalAnsArr.push({\n      id: nanoid(),\n      ans: newAnswers[choose3],\n      held: false\n    });\n    newAnswers.splice(choose3, 1);\n    finalAnsArr.push({\n      id: nanoid(),\n      ans: newAnswers[0],\n      held: false\n    });\n    return finalAnsArr;\n  }\n  console.log(ansShownScrren);\n  function saveAns(id, e) {\n\n    // setUserAns(()=> [\n    //   ...userAns, { id: id, answer: \n    //   }\n    // ])\n  }\n  function toggle(event) {\n    console.log(event);\n    console.log(event.target.getAttribute('name'));\n    const answer = event.target.innerHTML;\n    const noOfQuestion = event.target.getAttribute('name');\n    const newAnsArr = [];\n    setAnsShownScreen(prevAns => {\n      prevAns.map(ans => {\n        console.log(ans);\n        if (ans.ans === answers) {\n          const innerArr = [];\n          // ans.map((el) => {\n          //    return el.ans === answer ? innerArr.push({id: el.id, ans: el.ans, held: !el.held})\n          //     : innerArr.push(el)\n          // })\n          // newAnsArr.push(innerArr)\n        } else {\n          newAnsArr.push(ans);\n        }\n        console.log(newAnsArr);\n        const final = newAnsArr.slice(0, 5);\n        console.log(final.length);\n        console.log(final);\n        return final;\n      });\n    });\n  }\n\n  // setAnsShownScreen(prevAns => {\n  //   prevAns.map(ans => {\n  //       if (ans === answers){\n  //           const innerArr=[]\n  //           ans.map((el) => {\n  //              return el.ans === answer ? innerArr.push({id: el.id, ans: el.ans, held: !el.held})\n  //               : innerArr.push(el)\n  //           })\n  //           newAnsArr.push(innerArr)\n  //   } else {\n  //           newAnsArr.push(ans)\n  //       }\n  //       console.log(newAnsArr)\n  //       const final = newAnsArr.slice(0,5)\n  //       console.log(final.length)\n  //       console.log(final)\n  //       return final\n  //   })\n\n  // })\n  // const questionScreen = React.useEffect (() => {\n  //   const timer = setTimeout(() => {\n  //     console.log(questions)\n  //     console.log(questions)\n  //     console.log(answers)\n  //     console.log(ansShownScrren)\n  //     for (let i=0; i<5 ; i++ ) {\n  //     <Question \n  //                       question={questions[i].question} \n  //                       key={questions[i].id} \n  //                       answers={ansShownScrren[i]}\n  //                       id={ansShownScrren[i].id} \n  //                       // setAnsShown={()=>setAnsShownScreen(ansShownScrren[0].id)}\n  //                       // userAns = {userAns}\n  //                       // checked={userAns.checked}\n  //                       // toggle={() => toggle(questions[0].id)}\n  //                       />\n  //                     }\n  //   }, 3000);\n  //   return () => clearTimeout(timer);\n\n  // },[ansShownScrren])\n\n  // draws element onto DOM\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [start && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Quizzleee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: \"Check your overall knowledge?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: changeStart,\n          children: \"Start Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }, this), !start && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"containerAnswers\",\n        children: [/*#__PURE__*/_jsxDEV(Question, {\n          question: questions[0].question,\n          name: questions[0].id,\n          answers: ansShownScrren[0],\n          fullAnswers: ansShownScrren,\n          saveAns: saveAns(),\n          setAns: setAnsShownScreen,\n          id: ansShownScrren[0].id,\n          toggle: toggle\n        }, questions[0].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Question, {\n          question: questions[1].question,\n          answers: ansShownScrren[1],\n          saveAns: saveAns(),\n          setAns: setAnsShownScreen,\n          id: questions[1].id\n        }, questions[1].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Question, {\n          question: questions[2].question,\n          answers: ansShownScrren[2],\n          saveAns: saveAns(),\n          setAns: setAnsShownScreen,\n          id: questions[2].id\n        }, questions[2].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Question, {\n          question: questions[3].question,\n          answers: ansShownScrren[3],\n          saveAns: saveAns(),\n          setAns: setAnsShownScreen,\n          id: questions[3].id\n        }, questions[3].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Question, {\n          question: questions[4].question,\n          answers: ansShownScrren[4],\n          saveAns: saveAns(),\n          setAns: setAnsShownScreen,\n          id: questions[4].id\n        }, questions[4].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          children: \"Check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Bxs64uEsV0yzzm5aKU1+hrpHfHM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","Question","nanoid","jsxDEV","_jsxDEV","App","_s","start","setStart","useState","questions","setQuestions","answers","setAnswers","userAns","setUserAns","ansShownScrren","setAnsShownScreen","gameWon","setGameWon","changeStart","useEffect","fetch","then","res","json","data","questionsArray","answersArray","i","push","question","results","id","correct","correct_answer","incorrect","incorrect_answers","saveAnsShown","ans","que","mixAnswers","obj","finalAnsArr","newAnswers","choose1","Math","floor","random","held","splice","choose2","choose3","console","log","saveAns","e","toggle","event","target","getAttribute","answer","innerHTML","noOfQuestion","newAnsArr","prevAns","map","innerArr","final","slice","length","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","fullAnswers","setAns","_c","$RefreshReg$"],"sources":["/Users/xozi/Desktop/triviaProj/trivia/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport React from 'react';\nimport './App.css';\nimport Question from \"./Question\"\nimport { nanoid } from 'nanoid';\n\nfunction App() {\n\nconst [ start, setStart]= React.useState(true)\nconst [questions, setQuestions] = React.useState([])\nconst [answers, setAnswers] = React.useState([])\nconst [userAns, setUserAns] = React.useState([])\nconst [ansShownScrren, setAnsShownScreen] = React.useState([])\nconst [gameWon, setGameWon] = React.useState(false)\n// changes start screen into game\nfunction changeStart () {\n  setStart(!start)\n}\n\n// data download from api\nReact.useEffect(() => {\n  fetch(\"https://opentdb.com/api.php?amount=5&difficulty=easy&type=multiple\")\n  .then(res => res.json())\n  .then(data => {\n\n    const questionsArray = []\n    const answersArray =[]\n    for (let i=0; i<5; i++) {\n      questionsArray.push({\n        question: data.results[i].question,\n        id: i,\n      })\n      answersArray.push({\n         correct: data.results[i].correct_answer,\n         incorrect: data.results[i].incorrect_answers\n      })\n    }\n    \n    saveAnsShown(answersArray, questionsArray)\n    \n  })\n\n},[])\n\nfunction saveAnsShown (ans, que) {\n  setQuestions(que)\n  setAnswers(ans)\n  setAnsShownScreen(() => [\n     mixAnswers(ans[0]),\n     mixAnswers(ans[1]),\n     mixAnswers(ans[2]),\n     mixAnswers(ans[3]),\n     mixAnswers(ans[4])\n     \n  ])\n  \n}\n\n// React.useEffect (() => {\n  \n// },[gameWon])\n\nfunction mixAnswers (obj) {\n    let finalAnsArr = []\n    let newAnswers = [\n      obj.correct, \n      obj.incorrect[0],\n      obj.incorrect[1],\n      obj.incorrect[2],\n    ]\n    //choose 1 ans randomly\n    const choose1 = Math.floor(Math.random()*3)\n    finalAnsArr.push({id:nanoid(), ans:newAnswers[choose1], held:false})\n    newAnswers.splice(choose1,1)\n    //choose 2 ans randomly\n    const choose2 = Math.floor(Math.random()*2)\n    finalAnsArr.push({id:nanoid(), ans:newAnswers[choose2], held:false})\n    newAnswers.splice(choose2,1)\n    //choose 3 ans randomly\n    const choose3 = Math.floor(Math.random())\n    finalAnsArr.push({id:nanoid(), ans:newAnswers[choose3], held:false})\n    newAnswers.splice(choose3,1)\n    finalAnsArr.push({id:nanoid() ,ans: newAnswers[0], held:false})\n   \n    return finalAnsArr\n}\nconsole.log(ansShownScrren)\nfunction saveAns (id, e) {\n  \n  // setUserAns(()=> [\n  //   ...userAns, { id: id, answer: \n  //   }\n  // ])\n}\n\nfunction toggle (event) {\n  console.log(event)\n  console.log(event.target.getAttribute('name'))\n    const answer = event.target.innerHTML\n    const noOfQuestion = event.target.getAttribute('name')\n    const newAnsArr = []\n      setAnsShownScreen(prevAns => {\n              prevAns.map(ans => {\n                console.log(ans)\n                  if (ans.ans === answers){\n                      const innerArr=[]\n                      // ans.map((el) => {\n                      //    return el.ans === answer ? innerArr.push({id: el.id, ans: el.ans, held: !el.held})\n                      //     : innerArr.push(el)\n                      // })\n                      // newAnsArr.push(innerArr)\n              } else {\n                      newAnsArr.push(ans)\n                  }\n                  console.log(newAnsArr)\n                  const final = newAnsArr.slice(0,5)\n                  console.log(final.length)\n                  console.log(final)\n                  return final\n              })\n              \n          })\n\n}\n\n// setAnsShownScreen(prevAns => {\n//   prevAns.map(ans => {\n//       if (ans === answers){\n//           const innerArr=[]\n//           ans.map((el) => {\n//              return el.ans === answer ? innerArr.push({id: el.id, ans: el.ans, held: !el.held})\n//               : innerArr.push(el)\n//           })\n//           newAnsArr.push(innerArr)\n//   } else {\n//           newAnsArr.push(ans)\n//       }\n//       console.log(newAnsArr)\n//       const final = newAnsArr.slice(0,5)\n//       console.log(final.length)\n//       console.log(final)\n//       return final\n//   })\n  \n// })\n// const questionScreen = React.useEffect (() => {\n//   const timer = setTimeout(() => {\n//     console.log(questions)\n//     console.log(questions)\n//     console.log(answers)\n//     console.log(ansShownScrren)\n//     for (let i=0; i<5 ; i++ ) {\n//     <Question \n//                       question={questions[i].question} \n//                       key={questions[i].id} \n//                       answers={ansShownScrren[i]}\n//                       id={ansShownScrren[i].id} \n//                       // setAnsShown={()=>setAnsShownScreen(ansShownScrren[0].id)}\n//                       // userAns = {userAns}\n//                       // checked={userAns.checked}\n//                       // toggle={() => toggle(questions[0].id)}\n//                       />\n//                     }\n//   }, 3000);\n//   return () => clearTimeout(timer);\n\n \n// },[ansShownScrren])\n\n// draws element onto DOM\n  return (\n    <div>\n        {(start) && (\n          <div>\n            <div className='container'> \n                <div className='title'>Quizzleee</div>\n                <div className='info'>Check your overall knowledge?</div>\n                <button className='button' onClick={changeStart}>Start Quiz</button>\n              </div>\n          </div> \n                 )}\n        {(!start) && (\n          <div>\n            <div className='containerAnswers'> \n                {/* {questionScreen} */}\n                <Question \n                    question={questions[0].question} \n                    key={questions[0].id} \n                    name={questions[0].id} \n                    answers={ansShownScrren[0]}\n                    fullAnswers={ansShownScrren}\n                    saveAns={saveAns()}\n                    setAns = {setAnsShownScreen}\n                    id={ansShownScrren[0].id}\n                    toggle = {toggle} />\n              \n                <Question \n                    question={questions[1].question} \n                    key={questions[1].id} \n                    answers={ansShownScrren[1]}\n                    saveAns={saveAns()}\n                    setAns = {setAnsShownScreen}\n                    id={questions[1].id} />\n                <Question \n                    question={questions[2].question} \n                    key={questions[2].id} \n                    answers={ansShownScrren[2]}\n                    saveAns={saveAns()}\n                    setAns = {setAnsShownScreen}\n                    id={questions[2].id} />\n                <Question \n                    question={questions[3].question} \n                    key={questions[3].id} \n                    answers={ansShownScrren[3]}\n                    saveAns={saveAns()}\n                    setAns = {setAnsShownScreen}\n                    id={questions[3].id} />\n                <Question \n                    question={questions[4].question} \n                    key={questions[4].id} \n                    answers={ansShownScrren[4]}\n                    saveAns={saveAns()}\n                    setAns = {setAnsShownScreen}\n                    id={questions[4].id} />\n                <button className='button' >Check</button>\n              </div>\n          </div> \n                 )}\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}